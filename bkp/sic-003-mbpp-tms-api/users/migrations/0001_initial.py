# Generated by Django 2.0.5 on 2019-12-05 06:22

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import mbpp_tms_api.helpers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('new_nric', models.CharField(blank=True, max_length=255)),
                ('old_nric', models.CharField(blank=True, max_length=255)),
                ('telephone_number', models.CharField(blank=True, max_length=10)),
                ('profile_picture', models.ImageField(null=True, upload_to=mbpp_tms_api.helpers.PathAndRename('images'))),
                ('user_type', models.CharField(choices=[('EC', 'End Client'), ('DC', 'Department Coordinator'), ('XC', 'Exercise Coordinator'), ('AD', 'Administrator'), ('TR', 'Trainer'), ('OT', 'Other')], default='OT', max_length=2)),
                ('gender_type', models.CharField(choices=[('ML', 'Lelaki'), ('FM', 'Perempuan'), ('OT', 'Other')], default='OT', max_length=2)),
                ('gred', models.CharField(blank=True, max_length=255)),
                ('department_type', models.CharField(choices=[('KW', 'KAWALAN BANGUNAN'), ('KN', 'KEJURUTERAAN'), ('KK', 'KESIHATAN,PERSEKITARAAN DAN PELESENAN'), ('PB', 'PERBENDAHARAAN'), ('PP', 'PENILAIAN DAN PENGURUSAN HARTA'), ('UU', 'UNDANG-UNDANG'), ('KP', 'KHIDMAT PENGURUSAN'), ('KM', 'KHIDMAT KEMASYARAKATAN'), ('KW', 'KONSERVASI WARISAN'), ('PB', 'PESURUHJAYA BANGUNAN'), ('PG', 'PENGUATKUASAAAN'), ('PN', 'PERKHIDMATAN PERBANDARAN'), ('LL', 'LANDSKAP'), ('BP', 'BAHAGIAN PELESENAN'), ('UD', 'UNIT AUDIT DALAMAN'), ('UO', 'UNIT OSC'), ('OT', 'Other')], default='OT', max_length=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
